version: "3.9"

name: gis-utility-platform

services:
  db:
    image: postgis/postgis:15-3.4
    container_name: gis_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-gis}
      TZ: UTC
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: gis_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: gis_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      TZ: UTC
    ports:
      - "${PGADMIN_PORT:-8081}:80"
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/misc/ping || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: gis_api
    environment:
      NODE_ENV: development
      API_PORT: ${API_PORT:-8080}
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/gis}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:5173}
      TZ: UTC
    ports:
      - "${API_PORT:-8080}:8080"
    volumes:
      - ./api:/usr/src/app
      - api_node_modules:/usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: bash -lc "npm install && npm run start"

  ml:
    build:
      context: ./ml
      dockerfile: Dockerfile
    container_name: gis_ml
    environment:
      ML_PORT: ${ML_PORT:-8000}
      TZ: UTC
    ports:
      - "${ML_PORT:-8000}:8000"
    volumes:
      - ./ml:/app
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import sys,urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/health').read() else sys.exit(1)\""]
      interval: 10s
      timeout: 5s
      retries: 5
    command: bash -lc "pip install -r requirements.txt && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gis_frontend
    environment:
      VITE_API_URL: http://localhost:8080
      VITE_ML_URL: http://localhost:8000
    ports:
      - "5173:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - api
      - ml
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  redis_data:
  api_node_modules:

